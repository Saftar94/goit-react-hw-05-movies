{"version":3,"file":"static/js/128.7d461786.chunk.js","mappings":"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","sources":["Apiserver.js","webpack://goit-react-hw-05-movies/./src/views/MovieDetailsPage.module.scss?565f","views/MovieDetailsPage.jsx"],"sourcesContent":["const KEY = '8eadd8b4df8a5dcd77ffa3f63c5736c3'\nconst BASE = 'https://api.themoviedb.org/3'\nconst MOOVIEWEEK = `${BASE}/trending/movie/week`\nconst SEARCHURL = `${BASE}/search/movie`\nconst ID_URL = `${BASE}/movie/`\n\nexport function renderMovies(page, searchQuery, option) {\n  if (option === 'home') {\n    const URL_ADDRES = `${MOOVIEWEEK}?api_key=${KEY}&page=${page}`\n    return FetchAPi(URL_ADDRES)\n  } else if (searchQuery !== undefined) {\n    const URL_ADDRES = `${SEARCHURL}?api_key=${KEY}&language=en-US&query=${searchQuery}&page=${page}`\n    return FetchAPi(URL_ADDRES)\n  }\n}\n\nexport function renderParamMovie(id, option) {\n  if (option) {\n    const URL_ADDRES = `${ID_URL}${id}/${option}?api_key=${KEY}`\n    return FetchAPi(URL_ADDRES)\n      .then((response) => {\n        return response\n      })\n      .catch((error) => {\n        'error'\n      })\n  } else {\n    const URL_ADDRES = `${ID_URL}${id}?api_key=${KEY}`\n    return FetchAPi(URL_ADDRES).then((response) => {\n      return response\n    })\n  }\n}\n\nfunction FetchAPi(URL_ADDRES) {\n  return fetch(URL_ADDRES).then((res) => {\n    if (res.status === 200) {\n      return res.json()\n    } else {\n      return new Error()\n    }\n  })\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"DivLink\":\"MovieDetailsPage_DivLink__HhuxJ\",\"Link\":\"MovieDetailsPage_Link__kODlL\",\"UlList\":\"MovieDetailsPage_UlList__2O0oS\",\"DivButton\":\"MovieDetailsPage_DivButton__q6B5e\",\"ImageMov\":\"MovieDetailsPage_ImageMov__4tQWk\",\"List\":\"MovieDetailsPage_List__cGkOi\",\"DiscripMovies\":\"MovieDetailsPage_DiscripMovies__qyDKy\",\"SpanMov\":\"MovieDetailsPage_SpanMov__eKxeW\",\"SpanDAMov\":\"MovieDetailsPage_SpanDAMov__9-0Kk\",\"SpanDescMov\":\"MovieDetailsPage_SpanDescMov__PQzSc\"};","import { renderParamMovie } from '../Apiserver'\nimport { lazy, Suspense, useState, useEffect } from 'react'\nimport styles from './MovieDetailsPage.module.scss'\nimport {\n  useRouteMatch,\n  useParams,\n  useHistory,\n  useLocation,\n} from 'react-router-dom'\nimport { ImStarFull } from 'react-icons/im'\nimport { Link, Route } from 'react-router-dom'\nimport { BallTriangle } from 'react-loader-spinner'\nimport Section from '../component/Section/Section'\n\nconst Cast = lazy(() =>\n  import('../component/Cast/Cast' /* webpackChunkName: \"Cast-components\" */),\n)\nconst Reviews = lazy(() =>\n  import(\n    '../component/Reviews/Reviews' /* webpackChunkName: \"Reviews-components\" */\n  ),\n)\n\nconst MovieDetauls = () => {\n  const [movieCard, setmovieCard] = useState(null)\n  const params = useParams()\n  const { url } = useRouteMatch()\n  const history = useHistory()\n  const location = useLocation()\n\n  useEffect(() => {\n    renderParamMovie(params.Id).then((data) => setmovieCard(data))\n  }, [])\n\n  const GoBack = () => {\n    history.push(location?.state?.from ?? '/movies')\n  }\n\n  return (\n    <>\n      <Section>\n        <ul className={styles.UlList}>\n          <div className={styles.DivButton}>\n            <button className={styles.Link} type=\"button\" onClick={GoBack}>\n              GO BACK\n            </button>\n          </div>\n          {movieCard && (\n            <div>\n              <li className={styles.List} key={movieCard.id}>\n                <img\n                  className={styles.ImageMov}\n                  src={`https://image.tmdb.org/t/p/w500${movieCard.poster_path}`}\n                  alt={movieCard.title}\n                  height={450}\n                />\n                <div className={styles.DiscripMovies}>\n                  <h2>{movieCard.title}</h2>\n                  <span className={styles.SpanMov}>ABOUT THE MOVIE</span>\n                  <p>\n                    <span className={styles.SpanDAMov}>Release date:</span>\n                    {movieCard.release_date}\n                  </p>\n                  <p>\n                    <span className={styles.SpanDAMov}>LIKES:</span>\n                    {movieCard.popularity}\n                  </p>\n                  <p>\n                    <span className={styles.SpanDAMov}>IMDb RATING:</span>\n                    <ImStarFull />\n                    {movieCard.vote_average}/10.0\n                  </p>\n                  <span className={styles.SpanDescMov}> Description:</span>\n                  <p>{movieCard.overview}</p>\n                  <p>\n                    <span className={styles.SpanDAMov}> Genre:</span>\n\n                    {movieCard.genres.map((gener) => `${gener.name} `)}\n                  </p>\n                </div>\n              </li>\n              <div className={styles.DivLink}>\n                <Link className={styles.Link} to={`${url}/cast`}>\n                  Cast\n                </Link>\n                <Link className={styles.Link} to={`${url}/reviews`}>\n                  Reviews\n                </Link>\n              </div>\n              <Suspense\n                fallback={\n                  <BallTriangle\n                    type=\"Puff\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                    timeout={3000}\n                  />\n                }\n              >\n                <Route exact path=\"/movies/:Id/cast\">\n                  <Cast />\n                </Route>\n                <Route exact path=\"/movies/:Id/reviews\">\n                  <Reviews />\n                </Route>\n              </Suspense>\n            </div>\n          )}\n        </ul>\n      </Section>\n    </>\n  )\n}\n\nexport default MovieDetauls\n"],"names":["KEY","BASE","MOOVIEWEEK","SEARCHURL","ID_URL","renderMovies","page","searchQuery","option","FetchAPi","undefined","renderParamMovie","id","then","response","catch","error","URL_ADDRES","fetch","res","status","json","Error","Cast","lazy","Reviews","useState","movieCard","setmovieCard","params","useParams","url","useRouteMatch","history","useHistory","location","useLocation","useEffect","Id","data","Section","className","styles","type","onClick","push","state","from","src","poster_path","alt","title","height","release_date","popularity","vote_average","overview","genres","map","gener","name","to","Suspense","fallback","color","width","timeout","exact","path"],"sourceRoot":""}